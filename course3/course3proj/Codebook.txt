Collection
Raw data are obtained from UCI Machine Learning repository. In particular we used the Human Activity Recognition Using Smartphones Data Set [1],
 that was used by the original collectors to conduct experiments exploiting Support Vector Machine (SVM) [2].
Feature Selection 
=================

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. 
These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz.

The set of variables that were estimated from these signals are:
mean(): Mean value
std(): Standard deviation
mad(): Median absolute deviation
max(): Largest value in array
min(): Smallest value in array
sma(): Signal magnitude area
energy(): Energy measure. Sum of the squares divided by the number of values.
iqr(): Interquartile range
entropy(): Signal entropy
arCoeff(): Autoregression coefficients with Burg order equal to 4
correlation(): Correlation coefficient between two signals
maxInds(): Index of the frequency component with largest magnitude
meanFreq(): Weighted average of the frequency components to obtain a mean frequency
skewness(): Skewness of the frequency domain signal
kurtosis(): Kurtosis of the frequency domain signal
bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.
angle(): Angle between some vectors.

Transformation
An R script run_analysis.R was created which will do the below
1) Merges the training and the test sets to create one data set.
3) Uses descriptive activity names to name the activities in the data set.
I did point 3 initially itself so that we can do all the reads in one section
After setting the source directory for the files, read into tables the data located in
features.txt
activity_labels.txt
subject_train.txt
x_train.txt
y_train.txt
subject_test.txt
x_test.txt
y_test.txt
R utilitis ued - read.table and cbind. This inally creates a basic joined dataframe test_train_df. Even descrption of each activity is leaded from features.txt


2) Extracts only the measurements on the mean and standard deviation for each measurement.
Use colnames to extract the column name of the columns of dataframe.
Used grepl to extract specific columns into a colname vector having mean and standard deviation from a main tidy dataset. This creates a dataframe  mean_sd_df

4) ,Appropriately labels the data set with descriptive variable names.
use mapply to change colnames in the colname vector to have more descrptive variables


4) Appropriately labels the data set with descriptive variable names.

5) From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
use ddply to do this grouping and summation activity as per subject if and activity id.